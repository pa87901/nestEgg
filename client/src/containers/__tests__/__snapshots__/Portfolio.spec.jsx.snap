// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Portfolio Portfolio snapshot has not changed 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Portfolio
    handleRemoveBookings={[Function]}
    handleSetHoldings={[Function]}
    selectedHoldings={Array []}
    store={Array []}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <SegmentGroup
        className="blotter"
      >
        <Segment>
          <h2>
            Holdings
          </h2>
          <Connect(Blotter) />
        </Segment>
        <Segment
          className="portfolioButtonRow"
        >
          <Button
            as="button"
            basic={true}
            color={null}
            onClick={[Function]}
          >
            Delete
          </Button>
        </Segment>
      </SegmentGroup>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Segment>
            <h2>
              Holdings
            </h2>
            <Connect(Blotter) />
          </Segment>,
          <Segment
            className="portfolioButtonRow"
          >
            <Button
              as="button"
              basic={true}
              color={null}
              onClick={[Function]}
            >
              Delete
            </Button>
          </Segment>,
        ],
        "className": "blotter",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <h2>
                Holdings
              </h2>,
              <Connect(Blotter) />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Holdings",
              },
              "ref": null,
              "rendered": "Holdings",
              "type": "h2",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Button
              as="button"
              basic={true}
              color={null}
              onClick={[Function]}
            >
              Delete
            </Button>,
            "className": "portfolioButtonRow",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "as": "button",
              "basic": true,
              "children": "Delete",
              "color": null,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Delete",
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <SegmentGroup
          className="blotter"
        >
          <Segment>
            <h2>
              Holdings
            </h2>
            <Connect(Blotter) />
          </Segment>
          <Segment
            className="portfolioButtonRow"
          >
            <Button
              as="button"
              basic={true}
              color={null}
              onClick={[Function]}
            >
              Delete
            </Button>
          </Segment>
        </SegmentGroup>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <Segment>
              <h2>
                Holdings
              </h2>
              <Connect(Blotter) />
            </Segment>,
            <Segment
              className="portfolioButtonRow"
            >
              <Button
                as="button"
                basic={true}
                color={null}
                onClick={[Function]}
              >
                Delete
              </Button>
            </Segment>,
          ],
          "className": "blotter",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <h2>
                  Holdings
                </h2>,
                <Connect(Blotter) />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Holdings",
                },
                "ref": null,
                "rendered": "Holdings",
                "type": "h2",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <Button
                as="button"
                basic={true}
                color={null}
                onClick={[Function]}
              >
                Delete
              </Button>,
              "className": "portfolioButtonRow",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "as": "button",
                "basic": true,
                "children": "Delete",
                "color": null,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Delete",
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
